# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- refs/tags/*

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- script: set
  displayName: Show Variables

- task: PowerShell@2
  displayName: Set git variables
  inputs:
    targetType: inline
    script: |
      $var = "$(git tag -l --points-at HEAD)".Trim()
      if ($var -eq '')
      {
        $semver = "ci-$BUILD_BUILDNUMBER"
        Write-Host "$("##vso[task.setvariable variable=VersionSuffix]")$semver"
        Write-Host "VersionSuffix: '$semver'"
      }
      $var = $(git describe --tags $(git rev-list --tags --max-count=1))
      if ($var -eq '')
      {
        $var = "0.0.1"
      }
      Write-Host "$("##vso[task.setvariable variable=VersionPrefix]")$var"
      Write-Host "VersionPrefix: '$var'"

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: Push to nuget
  #condition: ne(variables['GIT_TAG'], '')
  inputs:
    command: push
    packagesToPush: '$(Build.SourcesDirectory)/**/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'nuget-default'
    versioningScheme: byEnvVar
    versionEnvVar: GIT_TAG
    includeSymbols: true

